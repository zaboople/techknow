# Install AWS cli mac osx:
sudo pip install awscli --ignore-installed six

aws ec2 describe-instances
aws redshift describe-clusters
aws s3 ls

To run queries against your json etc:
  aws blah blah --query
  aws redshift describe-cluster-snapshots --query "Snapshots[*].{Owner:OwnerAccount,Snapshot:SnapshotIdentifier}" > $TEMP/SnapShotsToRevoke.txt

Get your user id when you only have your keys:
  aws iam get-user

Make a bucket with mb:
  aws s3 mb s3://troymotte
List a bucket
  aws s3 ls s3://troymotte
NOTE: You only make a top level bucket. Otherwise, "directories" are really just names. If they don't exist, they get created when you add files to them.


aws cloudformation delete-stack --stack-name XXX
aws cloudformation describe-stack-events --stack-name XXX

# LOGS:
aws logs describe-log-groups
aws logs get-log-events --log-group-name $blah
aws logs describe-log-streams --log-group-name
# or the easy way is once you have the group name, type
awslogs $groupname

# KMS
# This would be straightforward except that
# 1) KMS emits base64 output in all cases
# 2) KMS decrypt only accepts binary input
# So what we do is store the encrypted information in a file in binary.
aws kms encrypt --key-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx --plaintext "abcd" --query CiphertextBlob --output text | base64 -D > $TEMP/junk
aws kms decrypt --ciphertext-blob fileb://$TEMP/junk --query Plaintext --output text | base64 -D
