# QUOTING: You don't HAVE to quote things, but you'll have less problems if you always do.
# 1. Surround your expression with single quotes first, so that unix will leave the inside of
# those quotes alone
# 2. Inside the single quotes, put double quotes around names that jq might get fussy with.
#
# This works:
jq -M .dog.cat
#
# But this works too:
jq -M '.dog.cat'
#
# And this works no matter how funky the names are:
jq -M '."do-g"."c@at"'

# Get everything named bar under things named .foo
jq '.foo.bar'

# This will get the entire array named Clusters - all elements in the array
jq '.Clusters[]'

# This will get both attributes in the array of stuff under Clusters, but instead
# of pairing them up, it will split them out:
jq '.Clusters[]["MasterUsername","Tags"]'

# OK f that. Amazon makes it easy:
aws redshift describe-clusters --query 'Clusters[*].{user:MasterUsername,tags:Tags}' | less
